# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from .batch_response_simple_public_object_with_errors_status import BatchResponseSimplePublicObjectWithErrorsStatus
from .simple_public_object import SimplePublicObject
from .standard_error import StandardError


class BatchResponseSimplePublicObjectWithErrors(pydantic_v1.BaseModel):
    completed_at: dt.datetime = pydantic_v1.Field(alias="completedAt")
    num_errors: typing.Optional[int] = pydantic_v1.Field(alias="numErrors", default=None)
    requested_at: typing.Optional[dt.datetime] = pydantic_v1.Field(alias="requestedAt", default=None)
    started_at: dt.datetime = pydantic_v1.Field(alias="startedAt")
    links: typing.Optional[typing.Dict[str, str]] = None
    results: typing.List[SimplePublicObject]
    errors: typing.Optional[typing.List[StandardError]] = None
    status: BatchResponseSimplePublicObjectWithErrorsStatus

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        populate_by_name = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
